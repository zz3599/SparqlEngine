

result1(Product,Label) :- 
	rdf3(Product, '<http://www.w3.org/2000/01/rdf-schema#label>', Label),
	val(producttype, Producttype),rdf3(Product, '<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>', Producttype),
	val(productfeature1, Productfeature1),rdf3(Product, '<http://www4.wiwiss.fu-berlin.de/bizer/bsbm/v01/vocabulary/productfeature>', Productfeature1),
	rdf3(Product, '<http://www4.wiwiss.fu-berlin.de/bizer/bsbm/v01/vocabulary/productpropertynumeric1>', P1),
	val(x, FilterRight0) , P1 @> FilterRight0,
	rdf3(Product, '<http://www4.wiwiss.fu-berlin.de/bizer/bsbm/v01/vocabulary/productpropertynumeric3>', P3),
	val(y, FilterRight1) , P3 @< FilterRight1,
	(val(productfeature2, Productfeature2),rdf3(Product, '<http://www4.wiwiss.fu-berlin.de/bizer/bsbm/v01/vocabulary/productfeature>', Productfeature2); not val(productfeature2, Productfeature2),rdf3(Product, '<http://www4.wiwiss.fu-berlin.de/bizer/bsbm/v01/vocabulary/productfeature>', Productfeature2)),
	(rdf3(Product, '<http://www.w3.org/2000/01/rdf-schema#label>', Testvar); not rdf3(Product, '<http://www.w3.org/2000/01/rdf-schema#label>', Testvar)),
	nonvar(Testvar).

% Order by the index of the list of structures
:- reconsult('utils.P').

orderby(UnorderedBag, OrderedBag) :- quick_sort_functor(UnorderedBag, 2, OrderedBag).


limit(_, Count, Count, Result, Result).
limit([], _, _, Result, Result).
limit([H|T], Counter, Limit, Stack, Result):-
    Counter < Limit, 
    Counter2 is Counter + 1,
    limit(T, Counter2, Limit, [H|Stack], Result).
limit(List, Counter, Limit, Result):-
    limit(List, Counter, Limit, [], Result). 

query(FinalBag,Producttype,Productfeature1,X,Y,Productfeature2):-
	assert(val(producttype, Producttype)),
	assert(val(productfeature1, Productfeature1)),
	assert(val(x, X)),
	assert(val(y, Y)),
	assert(val(productfeature2, Productfeature2)),
	bagof(query_intermediate(Product,Label), query_intermediate(Product,Label), ResultIntermediate),
	orderby(ResultIntermediate, OrderedResult),
	limit(OrderedResult, 0, 10, LimitResult),
	FinalBag = LimitResult.

query_intermediate(Product,Label):- result1(Product,Label).
